ARM GAS  /tmp/cckSW9jU.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB42:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/main.c    ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/main.c    ****   * the License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                             www.st.com/SLA0044
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "usb_device.h"
  24:Src/main.c    **** 
  25:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  26:Src/main.c    **** /* USER CODE BEGIN Includes */
  27:Src/main.c    **** 
  28:Src/main.c    **** /* USER CODE END Includes */
  29:Src/main.c    **** 
  30:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  31:Src/main.c    **** /* USER CODE BEGIN PTD */
  32:Src/main.c    **** 
  33:Src/main.c    **** /* USER CODE END PTD */
ARM GAS  /tmp/cckSW9jU.s 			page 2


  34:Src/main.c    **** 
  35:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  36:Src/main.c    **** /* USER CODE BEGIN PD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* USER CODE END PD */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  41:Src/main.c    **** /* USER CODE BEGIN PM */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE END PM */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  46:Src/main.c    **** CRC_HandleTypeDef hcrc;
  47:Src/main.c    **** 
  48:Src/main.c    **** SPI_HandleTypeDef hspi1;
  49:Src/main.c    **** 
  50:Src/main.c    **** TIM_HandleTypeDef htim2;
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE BEGIN PV */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END PV */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  57:Src/main.c    **** void SystemClock_Config(void);
  58:Src/main.c    **** static void MX_GPIO_Init(void);
  59:Src/main.c    **** static void MX_SPI1_Init(void);
  60:Src/main.c    **** static void MX_TIM2_Init(void);
  61:Src/main.c    **** static void MX_CRC_Init(void);
  62:Src/main.c    **** /* USER CODE BEGIN PFP */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE END PFP */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  67:Src/main.c    **** /* USER CODE BEGIN 0 */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* USER CODE END 0 */
  70:Src/main.c    **** 
  71:Src/main.c    **** /**
  72:Src/main.c    ****   * @brief  The application entry point.
  73:Src/main.c    ****   * @retval int
  74:Src/main.c    ****   */
  75:Src/main.c    **** int main(void)
  76:Src/main.c    **** {
  77:Src/main.c    ****   /* USER CODE BEGIN 1 */
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* USER CODE END 1 */
  80:Src/main.c    ****   
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  85:Src/main.c    ****   HAL_Init();
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* USER CODE BEGIN Init */
  88:Src/main.c    **** 
  89:Src/main.c    ****   /* USER CODE END Init */
  90:Src/main.c    **** 
ARM GAS  /tmp/cckSW9jU.s 			page 3


  91:Src/main.c    ****   /* Configure the system clock */
  92:Src/main.c    ****   SystemClock_Config();
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* USER CODE END SysInit */
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* Initialize all configured peripherals */
  99:Src/main.c    ****   MX_GPIO_Init();
 100:Src/main.c    ****   MX_SPI1_Init();
 101:Src/main.c    ****   MX_TIM2_Init();
 102:Src/main.c    ****   MX_USB_DEVICE_Init();
 103:Src/main.c    ****   MX_CRC_Init();
 104:Src/main.c    ****   /* USER CODE BEGIN 2 */
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* USER CODE END 2 */
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* Infinite loop */
 109:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 110:Src/main.c    ****   while (1)
 111:Src/main.c    ****   {
 112:Src/main.c    ****     /* USER CODE END WHILE */
 113:Src/main.c    **** 
 114:Src/main.c    ****     /* USER CODE BEGIN 3 */
 115:Src/main.c    ****   }
 116:Src/main.c    ****   /* USER CODE END 3 */
 117:Src/main.c    **** }
 118:Src/main.c    **** 
 119:Src/main.c    **** /**
 120:Src/main.c    ****   * @brief System Clock Configuration
 121:Src/main.c    ****   * @retval None
 122:Src/main.c    ****   */
 123:Src/main.c    **** void SystemClock_Config(void)
 124:Src/main.c    **** {
 125:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 126:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 127:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 128:Src/main.c    **** 
 129:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 130:Src/main.c    ****   */
 131:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 132:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 133:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 134:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 135:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 136:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV5;
 137:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 138:Src/main.c    ****   {
 139:Src/main.c    ****     Error_Handler();
 140:Src/main.c    ****   }
 141:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 142:Src/main.c    ****   */
 143:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 144:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 145:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSE;
 146:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 147:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
ARM GAS  /tmp/cckSW9jU.s 			page 4


 148:Src/main.c    **** 
 149:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 150:Src/main.c    ****   {
 151:Src/main.c    ****     Error_Handler();
 152:Src/main.c    ****   }
 153:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB;
 154:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL;
 155:Src/main.c    **** 
 156:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 157:Src/main.c    ****   {
 158:Src/main.c    ****     Error_Handler();
 159:Src/main.c    ****   }
 160:Src/main.c    **** }
 161:Src/main.c    **** 
 162:Src/main.c    **** /**
 163:Src/main.c    ****   * @brief CRC Initialization Function
 164:Src/main.c    ****   * @param None
 165:Src/main.c    ****   * @retval None
 166:Src/main.c    ****   */
 167:Src/main.c    **** static void MX_CRC_Init(void)
 168:Src/main.c    **** {
 169:Src/main.c    **** 
 170:Src/main.c    ****   /* USER CODE BEGIN CRC_Init 0 */
 171:Src/main.c    **** 
 172:Src/main.c    ****   /* USER CODE END CRC_Init 0 */
 173:Src/main.c    **** 
 174:Src/main.c    ****   /* USER CODE BEGIN CRC_Init 1 */
 175:Src/main.c    **** 
 176:Src/main.c    ****   /* USER CODE END CRC_Init 1 */
 177:Src/main.c    ****   hcrc.Instance = CRC;
 178:Src/main.c    ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 179:Src/main.c    ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 180:Src/main.c    ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 181:Src/main.c    ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 182:Src/main.c    ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 183:Src/main.c    ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 184:Src/main.c    ****   {
 185:Src/main.c    ****     Error_Handler();
 186:Src/main.c    ****   }
 187:Src/main.c    ****   /* USER CODE BEGIN CRC_Init 2 */
 188:Src/main.c    **** 
 189:Src/main.c    ****   /* USER CODE END CRC_Init 2 */
 190:Src/main.c    **** 
 191:Src/main.c    **** }
 192:Src/main.c    **** 
 193:Src/main.c    **** /**
 194:Src/main.c    ****   * @brief SPI1 Initialization Function
 195:Src/main.c    ****   * @param None
 196:Src/main.c    ****   * @retval None
 197:Src/main.c    ****   */
 198:Src/main.c    **** static void MX_SPI1_Init(void)
 199:Src/main.c    **** {
 200:Src/main.c    **** 
 201:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 0 */
 202:Src/main.c    **** 
 203:Src/main.c    ****   /* USER CODE END SPI1_Init 0 */
 204:Src/main.c    **** 
ARM GAS  /tmp/cckSW9jU.s 			page 5


 205:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 1 */
 206:Src/main.c    **** 
 207:Src/main.c    ****   /* USER CODE END SPI1_Init 1 */
 208:Src/main.c    ****   /* SPI1 parameter configuration*/
 209:Src/main.c    ****   hspi1.Instance = SPI1;
 210:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 211:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 212:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_4BIT;
 213:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 214:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 215:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 216:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 217:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 218:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 219:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 220:Src/main.c    ****   hspi1.Init.CRCPolynomial = 7;
 221:Src/main.c    ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 222:Src/main.c    ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 223:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 224:Src/main.c    ****   {
 225:Src/main.c    ****     Error_Handler();
 226:Src/main.c    ****   }
 227:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 2 */
 228:Src/main.c    **** 
 229:Src/main.c    ****   /* USER CODE END SPI1_Init 2 */
 230:Src/main.c    **** 
 231:Src/main.c    **** }
 232:Src/main.c    **** 
 233:Src/main.c    **** /**
 234:Src/main.c    ****   * @brief TIM2 Initialization Function
 235:Src/main.c    ****   * @param None
 236:Src/main.c    ****   * @retval None
 237:Src/main.c    ****   */
 238:Src/main.c    **** static void MX_TIM2_Init(void)
 239:Src/main.c    **** {
 240:Src/main.c    **** 
 241:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
 242:Src/main.c    **** 
 243:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
 244:Src/main.c    **** 
 245:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 246:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 247:Src/main.c    **** 
 248:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
 249:Src/main.c    **** 
 250:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
 251:Src/main.c    ****   htim2.Instance = TIM2;
 252:Src/main.c    ****   htim2.Init.Prescaler = 0;
 253:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 254:Src/main.c    ****   htim2.Init.Period = 0;
 255:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 256:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 257:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 258:Src/main.c    ****   {
 259:Src/main.c    ****     Error_Handler();
 260:Src/main.c    ****   }
 261:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
ARM GAS  /tmp/cckSW9jU.s 			page 6


 262:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 263:Src/main.c    ****   {
 264:Src/main.c    ****     Error_Handler();
 265:Src/main.c    ****   }
 266:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 267:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 268:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 269:Src/main.c    ****   {
 270:Src/main.c    ****     Error_Handler();
 271:Src/main.c    ****   }
 272:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
 273:Src/main.c    **** 
 274:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 275:Src/main.c    **** 
 276:Src/main.c    **** }
 277:Src/main.c    **** 
 278:Src/main.c    **** /**
 279:Src/main.c    ****   * @brief GPIO Initialization Function
 280:Src/main.c    ****   * @param None
 281:Src/main.c    ****   * @retval None
 282:Src/main.c    ****   */
 283:Src/main.c    **** static void MX_GPIO_Init(void)
 284:Src/main.c    **** {
  26              		.loc 1 284 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 00B5     		push	{lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 4
  33              		.cfi_offset 14, -4
  34 0002 89B0     		sub	sp, sp, #36
  35              	.LCFI1:
  36              		.cfi_def_cfa_offset 40
 285:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  37              		.loc 1 285 3 view .LVU1
  38              		.loc 1 285 20 is_stmt 0 view .LVU2
  39 0004 1022     		movs	r2, #16
  40 0006 0021     		movs	r1, #0
  41 0008 04A8     		add	r0, sp, #16
  42 000a FFF7FEFF 		bl	memset
  43              	.LVL0:
 286:Src/main.c    **** 
 287:Src/main.c    ****   /* GPIO Ports Clock Enable */
 288:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  44              		.loc 1 288 3 is_stmt 1 view .LVU3
  45              	.LBB2:
  46              		.loc 1 288 3 view .LVU4
  47              		.loc 1 288 3 view .LVU5
  48 000e 124B     		ldr	r3, .L2
  49 0010 5969     		ldr	r1, [r3, #20]
  50 0012 8020     		movs	r0, #128
  51 0014 C003     		lsls	r0, r0, #15
  52 0016 0143     		orrs	r1, r0
  53 0018 5961     		str	r1, [r3, #20]
  54              		.loc 1 288 3 view .LVU6
  55 001a 5A69     		ldr	r2, [r3, #20]
ARM GAS  /tmp/cckSW9jU.s 			page 7


  56 001c 0240     		ands	r2, r0
  57 001e 0092     		str	r2, [sp]
  58              		.loc 1 288 3 view .LVU7
  59 0020 009A     		ldr	r2, [sp]
  60              	.LBE2:
  61              		.loc 1 288 3 view .LVU8
 289:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  62              		.loc 1 289 3 view .LVU9
  63              	.LBB3:
  64              		.loc 1 289 3 view .LVU10
  65              		.loc 1 289 3 view .LVU11
  66 0022 5969     		ldr	r1, [r3, #20]
  67 0024 8020     		movs	r0, #128
  68 0026 8002     		lsls	r0, r0, #10
  69 0028 0143     		orrs	r1, r0
  70 002a 5961     		str	r1, [r3, #20]
  71              		.loc 1 289 3 view .LVU12
  72 002c 5A69     		ldr	r2, [r3, #20]
  73 002e 0240     		ands	r2, r0
  74 0030 0192     		str	r2, [sp, #4]
  75              		.loc 1 289 3 view .LVU13
  76 0032 019A     		ldr	r2, [sp, #4]
  77              	.LBE3:
  78              		.loc 1 289 3 view .LVU14
 290:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  79              		.loc 1 290 3 view .LVU15
  80              	.LBB4:
  81              		.loc 1 290 3 view .LVU16
  82              		.loc 1 290 3 view .LVU17
  83 0034 5A69     		ldr	r2, [r3, #20]
  84 0036 8021     		movs	r1, #128
  85 0038 C902     		lsls	r1, r1, #11
  86 003a 0A43     		orrs	r2, r1
  87 003c 5A61     		str	r2, [r3, #20]
  88              		.loc 1 290 3 view .LVU18
  89 003e 5B69     		ldr	r3, [r3, #20]
  90 0040 0B40     		ands	r3, r1
  91 0042 0293     		str	r3, [sp, #8]
  92              		.loc 1 290 3 view .LVU19
  93 0044 029B     		ldr	r3, [sp, #8]
  94              	.LBE4:
  95              		.loc 1 290 3 view .LVU20
 291:Src/main.c    **** 
 292:Src/main.c    ****   /*Configure GPIO pins : PB0 PB8 */
 293:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_8;
  96              		.loc 1 293 3 view .LVU21
  97              		.loc 1 293 23 is_stmt 0 view .LVU22
  98 0046 0223     		movs	r3, #2
  99 0048 FF33     		adds	r3, r3, #255
 100 004a 0393     		str	r3, [sp, #12]
 294:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 101              		.loc 1 294 3 is_stmt 1 view .LVU23
 295:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 102              		.loc 1 295 3 view .LVU24
 296:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 103              		.loc 1 296 3 view .LVU25
 104 004c 03A9     		add	r1, sp, #12
ARM GAS  /tmp/cckSW9jU.s 			page 8


 105 004e 0348     		ldr	r0, .L2+4
 106 0050 FFF7FEFF 		bl	HAL_GPIO_Init
 107              	.LVL1:
 297:Src/main.c    **** 
 298:Src/main.c    **** }
 108              		.loc 1 298 1 is_stmt 0 view .LVU26
 109 0054 09B0     		add	sp, sp, #36
 110              		@ sp needed
 111 0056 00BD     		pop	{pc}
 112              	.L3:
 113              		.align	2
 114              	.L2:
 115 0058 00100240 		.word	1073876992
 116 005c 00040048 		.word	1207960576
 117              		.cfi_endproc
 118              	.LFE42:
 120              		.section	.text.MX_SPI1_Init,"ax",%progbits
 121              		.align	1
 122              		.syntax unified
 123              		.code	16
 124              		.thumb_func
 125              		.fpu softvfp
 127              	MX_SPI1_Init:
 128              	.LFB40:
 199:Src/main.c    **** 
 129              		.loc 1 199 1 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133 0000 10B5     		push	{r4, lr}
 134              	.LCFI2:
 135              		.cfi_def_cfa_offset 8
 136              		.cfi_offset 4, -8
 137              		.cfi_offset 14, -4
 209:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 138              		.loc 1 209 3 view .LVU28
 209:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 139              		.loc 1 209 18 is_stmt 0 view .LVU29
 140 0002 0E48     		ldr	r0, .L5
 141 0004 0E4B     		ldr	r3, .L5+4
 142 0006 0360     		str	r3, [r0]
 210:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 143              		.loc 1 210 3 is_stmt 1 view .LVU30
 210:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 144              		.loc 1 210 19 is_stmt 0 view .LVU31
 145 0008 8223     		movs	r3, #130
 146 000a 5B00     		lsls	r3, r3, #1
 147 000c 4360     		str	r3, [r0, #4]
 211:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_4BIT;
 148              		.loc 1 211 3 is_stmt 1 view .LVU32
 211:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_4BIT;
 149              		.loc 1 211 24 is_stmt 0 view .LVU33
 150 000e 0023     		movs	r3, #0
 151 0010 8360     		str	r3, [r0, #8]
 212:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 152              		.loc 1 212 3 is_stmt 1 view .LVU34
 212:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
ARM GAS  /tmp/cckSW9jU.s 			page 9


 153              		.loc 1 212 23 is_stmt 0 view .LVU35
 154 0012 C022     		movs	r2, #192
 155 0014 9200     		lsls	r2, r2, #2
 156 0016 C260     		str	r2, [r0, #12]
 213:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 157              		.loc 1 213 3 is_stmt 1 view .LVU36
 213:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 158              		.loc 1 213 26 is_stmt 0 view .LVU37
 159 0018 0361     		str	r3, [r0, #16]
 214:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 160              		.loc 1 214 3 is_stmt 1 view .LVU38
 214:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 161              		.loc 1 214 23 is_stmt 0 view .LVU39
 162 001a 4361     		str	r3, [r0, #20]
 215:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 163              		.loc 1 215 3 is_stmt 1 view .LVU40
 215:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 164              		.loc 1 215 18 is_stmt 0 view .LVU41
 165 001c 8022     		movs	r2, #128
 166 001e D202     		lsls	r2, r2, #11
 167 0020 8261     		str	r2, [r0, #24]
 216:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 168              		.loc 1 216 3 is_stmt 1 view .LVU42
 216:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 169              		.loc 1 216 32 is_stmt 0 view .LVU43
 170 0022 C361     		str	r3, [r0, #28]
 217:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 171              		.loc 1 217 3 is_stmt 1 view .LVU44
 217:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 172              		.loc 1 217 23 is_stmt 0 view .LVU45
 173 0024 0362     		str	r3, [r0, #32]
 218:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 174              		.loc 1 218 3 is_stmt 1 view .LVU46
 218:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 175              		.loc 1 218 21 is_stmt 0 view .LVU47
 176 0026 4362     		str	r3, [r0, #36]
 219:Src/main.c    ****   hspi1.Init.CRCPolynomial = 7;
 177              		.loc 1 219 3 is_stmt 1 view .LVU48
 219:Src/main.c    ****   hspi1.Init.CRCPolynomial = 7;
 178              		.loc 1 219 29 is_stmt 0 view .LVU49
 179 0028 8362     		str	r3, [r0, #40]
 220:Src/main.c    ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 180              		.loc 1 220 3 is_stmt 1 view .LVU50
 220:Src/main.c    ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 181              		.loc 1 220 28 is_stmt 0 view .LVU51
 182 002a 0722     		movs	r2, #7
 183 002c C262     		str	r2, [r0, #44]
 221:Src/main.c    ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 184              		.loc 1 221 3 is_stmt 1 view .LVU52
 221:Src/main.c    ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 185              		.loc 1 221 24 is_stmt 0 view .LVU53
 186 002e 0363     		str	r3, [r0, #48]
 222:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 187              		.loc 1 222 3 is_stmt 1 view .LVU54
 222:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 188              		.loc 1 222 23 is_stmt 0 view .LVU55
 189 0030 0833     		adds	r3, r3, #8
ARM GAS  /tmp/cckSW9jU.s 			page 10


 190 0032 4363     		str	r3, [r0, #52]
 223:Src/main.c    ****   {
 191              		.loc 1 223 3 is_stmt 1 view .LVU56
 223:Src/main.c    ****   {
 192              		.loc 1 223 7 is_stmt 0 view .LVU57
 193 0034 FFF7FEFF 		bl	HAL_SPI_Init
 194              	.LVL2:
 231:Src/main.c    **** 
 195              		.loc 1 231 1 view .LVU58
 196              		@ sp needed
 197 0038 10BD     		pop	{r4, pc}
 198              	.L6:
 199 003a C046     		.align	2
 200              	.L5:
 201 003c 00000000 		.word	hspi1
 202 0040 00300140 		.word	1073819648
 203              		.cfi_endproc
 204              	.LFE40:
 206              		.section	.text.MX_TIM2_Init,"ax",%progbits
 207              		.align	1
 208              		.syntax unified
 209              		.code	16
 210              		.thumb_func
 211              		.fpu softvfp
 213              	MX_TIM2_Init:
 214              	.LFB41:
 239:Src/main.c    **** 
 215              		.loc 1 239 1 is_stmt 1 view -0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 24
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219 0000 30B5     		push	{r4, r5, lr}
 220              	.LCFI3:
 221              		.cfi_def_cfa_offset 12
 222              		.cfi_offset 4, -12
 223              		.cfi_offset 5, -8
 224              		.cfi_offset 14, -4
 225 0002 87B0     		sub	sp, sp, #28
 226              	.LCFI4:
 227              		.cfi_def_cfa_offset 40
 245:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 228              		.loc 1 245 3 view .LVU60
 245:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 229              		.loc 1 245 26 is_stmt 0 view .LVU61
 230 0004 1022     		movs	r2, #16
 231 0006 0021     		movs	r1, #0
 232 0008 02A8     		add	r0, sp, #8
 233 000a FFF7FEFF 		bl	memset
 234              	.LVL3:
 246:Src/main.c    **** 
 235              		.loc 1 246 3 is_stmt 1 view .LVU62
 246:Src/main.c    **** 
 236              		.loc 1 246 27 is_stmt 0 view .LVU63
 237 000e 0822     		movs	r2, #8
 238 0010 0021     		movs	r1, #0
 239 0012 6846     		mov	r0, sp
 240 0014 FFF7FEFF 		bl	memset
ARM GAS  /tmp/cckSW9jU.s 			page 11


 241              	.LVL4:
 251:Src/main.c    ****   htim2.Init.Prescaler = 0;
 242              		.loc 1 251 3 is_stmt 1 view .LVU64
 251:Src/main.c    ****   htim2.Init.Prescaler = 0;
 243              		.loc 1 251 18 is_stmt 0 view .LVU65
 244 0018 0D4C     		ldr	r4, .L8
 245 001a 8023     		movs	r3, #128
 246 001c DB05     		lsls	r3, r3, #23
 247 001e 2360     		str	r3, [r4]
 252:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 248              		.loc 1 252 3 is_stmt 1 view .LVU66
 252:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 249              		.loc 1 252 24 is_stmt 0 view .LVU67
 250 0020 0025     		movs	r5, #0
 251 0022 6560     		str	r5, [r4, #4]
 253:Src/main.c    ****   htim2.Init.Period = 0;
 252              		.loc 1 253 3 is_stmt 1 view .LVU68
 253:Src/main.c    ****   htim2.Init.Period = 0;
 253              		.loc 1 253 26 is_stmt 0 view .LVU69
 254 0024 A560     		str	r5, [r4, #8]
 254:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 255              		.loc 1 254 3 is_stmt 1 view .LVU70
 254:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 256              		.loc 1 254 21 is_stmt 0 view .LVU71
 257 0026 E560     		str	r5, [r4, #12]
 255:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 258              		.loc 1 255 3 is_stmt 1 view .LVU72
 255:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 259              		.loc 1 255 28 is_stmt 0 view .LVU73
 260 0028 2561     		str	r5, [r4, #16]
 256:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 261              		.loc 1 256 3 is_stmt 1 view .LVU74
 256:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 262              		.loc 1 256 32 is_stmt 0 view .LVU75
 263 002a A561     		str	r5, [r4, #24]
 257:Src/main.c    ****   {
 264              		.loc 1 257 3 is_stmt 1 view .LVU76
 257:Src/main.c    ****   {
 265              		.loc 1 257 7 is_stmt 0 view .LVU77
 266 002c 2000     		movs	r0, r4
 267 002e FFF7FEFF 		bl	HAL_TIM_Base_Init
 268              	.LVL5:
 261:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 269              		.loc 1 261 3 is_stmt 1 view .LVU78
 261:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 270              		.loc 1 261 34 is_stmt 0 view .LVU79
 271 0032 8023     		movs	r3, #128
 272 0034 5B01     		lsls	r3, r3, #5
 273 0036 0293     		str	r3, [sp, #8]
 262:Src/main.c    ****   {
 274              		.loc 1 262 3 is_stmt 1 view .LVU80
 262:Src/main.c    ****   {
 275              		.loc 1 262 7 is_stmt 0 view .LVU81
 276 0038 02A9     		add	r1, sp, #8
 277 003a 2000     		movs	r0, r4
 278 003c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 279              	.LVL6:
ARM GAS  /tmp/cckSW9jU.s 			page 12


 266:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 280              		.loc 1 266 3 is_stmt 1 view .LVU82
 266:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 281              		.loc 1 266 37 is_stmt 0 view .LVU83
 282 0040 0095     		str	r5, [sp]
 267:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 283              		.loc 1 267 3 is_stmt 1 view .LVU84
 267:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 284              		.loc 1 267 33 is_stmt 0 view .LVU85
 285 0042 0195     		str	r5, [sp, #4]
 268:Src/main.c    ****   {
 286              		.loc 1 268 3 is_stmt 1 view .LVU86
 268:Src/main.c    ****   {
 287              		.loc 1 268 7 is_stmt 0 view .LVU87
 288 0044 6946     		mov	r1, sp
 289 0046 2000     		movs	r0, r4
 290 0048 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 291              	.LVL7:
 276:Src/main.c    **** 
 292              		.loc 1 276 1 view .LVU88
 293 004c 07B0     		add	sp, sp, #28
 294              		@ sp needed
 295 004e 30BD     		pop	{r4, r5, pc}
 296              	.L9:
 297              		.align	2
 298              	.L8:
 299 0050 00000000 		.word	htim2
 300              		.cfi_endproc
 301              	.LFE41:
 303              		.section	.text.MX_CRC_Init,"ax",%progbits
 304              		.align	1
 305              		.syntax unified
 306              		.code	16
 307              		.thumb_func
 308              		.fpu softvfp
 310              	MX_CRC_Init:
 311              	.LFB39:
 168:Src/main.c    **** 
 312              		.loc 1 168 1 is_stmt 1 view -0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316 0000 10B5     		push	{r4, lr}
 317              	.LCFI5:
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 4, -8
 320              		.cfi_offset 14, -4
 177:Src/main.c    ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 321              		.loc 1 177 3 view .LVU90
 177:Src/main.c    ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 322              		.loc 1 177 17 is_stmt 0 view .LVU91
 323 0002 0648     		ldr	r0, .L11
 324 0004 064B     		ldr	r3, .L11+4
 325 0006 0360     		str	r3, [r0]
 178:Src/main.c    ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 326              		.loc 1 178 3 is_stmt 1 view .LVU92
 178:Src/main.c    ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
ARM GAS  /tmp/cckSW9jU.s 			page 13


 327              		.loc 1 178 34 is_stmt 0 view .LVU93
 328 0008 0023     		movs	r3, #0
 329 000a 0371     		strb	r3, [r0, #4]
 179:Src/main.c    ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 330              		.loc 1 179 3 is_stmt 1 view .LVU94
 179:Src/main.c    ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 331              		.loc 1 179 33 is_stmt 0 view .LVU95
 332 000c 4371     		strb	r3, [r0, #5]
 180:Src/main.c    ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 333              		.loc 1 180 3 is_stmt 1 view .LVU96
 180:Src/main.c    ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 334              		.loc 1 180 36 is_stmt 0 view .LVU97
 335 000e 4361     		str	r3, [r0, #20]
 181:Src/main.c    ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 336              		.loc 1 181 3 is_stmt 1 view .LVU98
 181:Src/main.c    ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 337              		.loc 1 181 37 is_stmt 0 view .LVU99
 338 0010 8361     		str	r3, [r0, #24]
 182:Src/main.c    ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 339              		.loc 1 182 3 is_stmt 1 view .LVU100
 182:Src/main.c    ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 340              		.loc 1 182 24 is_stmt 0 view .LVU101
 341 0012 0133     		adds	r3, r3, #1
 342 0014 0362     		str	r3, [r0, #32]
 183:Src/main.c    ****   {
 343              		.loc 1 183 3 is_stmt 1 view .LVU102
 183:Src/main.c    ****   {
 344              		.loc 1 183 7 is_stmt 0 view .LVU103
 345 0016 FFF7FEFF 		bl	HAL_CRC_Init
 346              	.LVL8:
 191:Src/main.c    **** 
 347              		.loc 1 191 1 view .LVU104
 348              		@ sp needed
 349 001a 10BD     		pop	{r4, pc}
 350              	.L12:
 351              		.align	2
 352              	.L11:
 353 001c 00000000 		.word	hcrc
 354 0020 00300240 		.word	1073885184
 355              		.cfi_endproc
 356              	.LFE39:
 358              		.section	.text.SystemClock_Config,"ax",%progbits
 359              		.align	1
 360              		.global	SystemClock_Config
 361              		.syntax unified
 362              		.code	16
 363              		.thumb_func
 364              		.fpu softvfp
 366              	SystemClock_Config:
 367              	.LFB38:
 124:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 368              		.loc 1 124 1 is_stmt 1 view -0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 96
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372 0000 10B5     		push	{r4, lr}
 373              	.LCFI6:
ARM GAS  /tmp/cckSW9jU.s 			page 14


 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 4, -8
 376              		.cfi_offset 14, -4
 377 0002 98B0     		sub	sp, sp, #96
 378              	.LCFI7:
 379              		.cfi_def_cfa_offset 104
 125:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 380              		.loc 1 125 3 view .LVU106
 125:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 381              		.loc 1 125 22 is_stmt 0 view .LVU107
 382 0004 1C22     		movs	r2, #28
 383 0006 0021     		movs	r1, #0
 384 0008 0DA8     		add	r0, sp, #52
 385 000a FFF7FEFF 		bl	memset
 386              	.LVL9:
 126:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 387              		.loc 1 126 3 is_stmt 1 view .LVU108
 126:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 388              		.loc 1 126 22 is_stmt 0 view .LVU109
 389 000e 1022     		movs	r2, #16
 390 0010 0021     		movs	r1, #0
 391 0012 07A8     		add	r0, sp, #28
 392 0014 FFF7FEFF 		bl	memset
 393              	.LVL10:
 127:Src/main.c    **** 
 394              		.loc 1 127 3 is_stmt 1 view .LVU110
 127:Src/main.c    **** 
 395              		.loc 1 127 28 is_stmt 0 view .LVU111
 396 0018 1822     		movs	r2, #24
 397 001a 0021     		movs	r1, #0
 398 001c 01A8     		add	r0, sp, #4
 399 001e FFF7FEFF 		bl	memset
 400              	.LVL11:
 131:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 401              		.loc 1 131 3 is_stmt 1 view .LVU112
 131:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 402              		.loc 1 131 36 is_stmt 0 view .LVU113
 403 0022 0124     		movs	r4, #1
 404 0024 0B94     		str	r4, [sp, #44]
 132:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 405              		.loc 1 132 3 is_stmt 1 view .LVU114
 132:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 406              		.loc 1 132 30 is_stmt 0 view .LVU115
 407 0026 0523     		movs	r3, #5
 408 0028 0C93     		str	r3, [sp, #48]
 133:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 409              		.loc 1 133 3 is_stmt 1 view .LVU116
 133:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 410              		.loc 1 133 34 is_stmt 0 view .LVU117
 411 002a 033B     		subs	r3, r3, #3
 412 002c 1493     		str	r3, [sp, #80]
 134:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 413              		.loc 1 134 3 is_stmt 1 view .LVU118
 134:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 414              		.loc 1 134 35 is_stmt 0 view .LVU119
 415 002e 8023     		movs	r3, #128
 416 0030 5B02     		lsls	r3, r3, #9
ARM GAS  /tmp/cckSW9jU.s 			page 15


 417 0032 1593     		str	r3, [sp, #84]
 135:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV5;
 418              		.loc 1 135 3 is_stmt 1 view .LVU120
 135:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV5;
 419              		.loc 1 135 32 is_stmt 0 view .LVU121
 420 0034 A023     		movs	r3, #160
 421 0036 9B03     		lsls	r3, r3, #14
 422 0038 1693     		str	r3, [sp, #88]
 136:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 423              		.loc 1 136 3 is_stmt 1 view .LVU122
 136:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 424              		.loc 1 136 32 is_stmt 0 view .LVU123
 425 003a 0423     		movs	r3, #4
 426 003c 1793     		str	r3, [sp, #92]
 137:Src/main.c    ****   {
 427              		.loc 1 137 3 is_stmt 1 view .LVU124
 137:Src/main.c    ****   {
 428              		.loc 1 137 7 is_stmt 0 view .LVU125
 429 003e 0BA8     		add	r0, sp, #44
 430 0040 FFF7FEFF 		bl	HAL_RCC_OscConfig
 431              	.LVL12:
 143:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 432              		.loc 1 143 3 is_stmt 1 view .LVU126
 143:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 433              		.loc 1 143 31 is_stmt 0 view .LVU127
 434 0044 0723     		movs	r3, #7
 435 0046 0793     		str	r3, [sp, #28]
 145:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 436              		.loc 1 145 3 is_stmt 1 view .LVU128
 145:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 437              		.loc 1 145 34 is_stmt 0 view .LVU129
 438 0048 0894     		str	r4, [sp, #32]
 146:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 439              		.loc 1 146 3 is_stmt 1 view .LVU130
 146:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 440              		.loc 1 146 35 is_stmt 0 view .LVU131
 441 004a 0023     		movs	r3, #0
 442 004c 0993     		str	r3, [sp, #36]
 147:Src/main.c    **** 
 443              		.loc 1 147 3 is_stmt 1 view .LVU132
 147:Src/main.c    **** 
 444              		.loc 1 147 36 is_stmt 0 view .LVU133
 445 004e 0A93     		str	r3, [sp, #40]
 149:Src/main.c    ****   {
 446              		.loc 1 149 3 is_stmt 1 view .LVU134
 149:Src/main.c    ****   {
 447              		.loc 1 149 7 is_stmt 0 view .LVU135
 448 0050 0021     		movs	r1, #0
 449 0052 07A8     		add	r0, sp, #28
 450 0054 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 451              	.LVL13:
 153:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL;
 452              		.loc 1 153 3 is_stmt 1 view .LVU136
 153:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL;
 453              		.loc 1 153 38 is_stmt 0 view .LVU137
 454 0058 8023     		movs	r3, #128
 455 005a 9B02     		lsls	r3, r3, #10
ARM GAS  /tmp/cckSW9jU.s 			page 16


 456 005c 0193     		str	r3, [sp, #4]
 154:Src/main.c    **** 
 457              		.loc 1 154 3 is_stmt 1 view .LVU138
 154:Src/main.c    **** 
 458              		.loc 1 154 35 is_stmt 0 view .LVU139
 459 005e 8023     		movs	r3, #128
 460 0060 0693     		str	r3, [sp, #24]
 156:Src/main.c    ****   {
 461              		.loc 1 156 3 is_stmt 1 view .LVU140
 156:Src/main.c    ****   {
 462              		.loc 1 156 7 is_stmt 0 view .LVU141
 463 0062 01A8     		add	r0, sp, #4
 464 0064 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 465              	.LVL14:
 160:Src/main.c    **** 
 466              		.loc 1 160 1 view .LVU142
 467 0068 18B0     		add	sp, sp, #96
 468              		@ sp needed
 469 006a 10BD     		pop	{r4, pc}
 470              		.cfi_endproc
 471              	.LFE38:
 473              		.section	.text.main,"ax",%progbits
 474              		.align	1
 475              		.global	main
 476              		.syntax unified
 477              		.code	16
 478              		.thumb_func
 479              		.fpu softvfp
 481              	main:
 482              	.LFB37:
  76:Src/main.c    ****   /* USER CODE BEGIN 1 */
 483              		.loc 1 76 1 is_stmt 1 view -0
 484              		.cfi_startproc
 485              		@ Volatile: function does not return.
 486              		@ args = 0, pretend = 0, frame = 0
 487              		@ frame_needed = 0, uses_anonymous_args = 0
 488 0000 10B5     		push	{r4, lr}
 489              	.LCFI8:
 490              		.cfi_def_cfa_offset 8
 491              		.cfi_offset 4, -8
 492              		.cfi_offset 14, -4
  85:Src/main.c    **** 
 493              		.loc 1 85 3 view .LVU144
 494 0002 FFF7FEFF 		bl	HAL_Init
 495              	.LVL15:
  92:Src/main.c    **** 
 496              		.loc 1 92 3 view .LVU145
 497 0006 FFF7FEFF 		bl	SystemClock_Config
 498              	.LVL16:
  99:Src/main.c    ****   MX_SPI1_Init();
 499              		.loc 1 99 3 view .LVU146
 500 000a FFF7FEFF 		bl	MX_GPIO_Init
 501              	.LVL17:
 100:Src/main.c    ****   MX_TIM2_Init();
 502              		.loc 1 100 3 view .LVU147
 503 000e FFF7FEFF 		bl	MX_SPI1_Init
 504              	.LVL18:
ARM GAS  /tmp/cckSW9jU.s 			page 17


 101:Src/main.c    ****   MX_USB_DEVICE_Init();
 505              		.loc 1 101 3 view .LVU148
 506 0012 FFF7FEFF 		bl	MX_TIM2_Init
 507              	.LVL19:
 102:Src/main.c    ****   MX_CRC_Init();
 508              		.loc 1 102 3 view .LVU149
 509 0016 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 510              	.LVL20:
 103:Src/main.c    ****   /* USER CODE BEGIN 2 */
 511              		.loc 1 103 3 view .LVU150
 512 001a FFF7FEFF 		bl	MX_CRC_Init
 513              	.LVL21:
 514              	.L15:
 110:Src/main.c    ****   {
 515              		.loc 1 110 3 discriminator 1 view .LVU151
 115:Src/main.c    ****   /* USER CODE END 3 */
 516              		.loc 1 115 3 discriminator 1 view .LVU152
 110:Src/main.c    ****   {
 517              		.loc 1 110 9 discriminator 1 view .LVU153
 518 001e FEE7     		b	.L15
 519              		.cfi_endproc
 520              	.LFE37:
 522              		.section	.text.Error_Handler,"ax",%progbits
 523              		.align	1
 524              		.global	Error_Handler
 525              		.syntax unified
 526              		.code	16
 527              		.thumb_func
 528              		.fpu softvfp
 530              	Error_Handler:
 531              	.LFB43:
 299:Src/main.c    **** 
 300:Src/main.c    **** /* USER CODE BEGIN 4 */
 301:Src/main.c    **** 
 302:Src/main.c    **** /* USER CODE END 4 */
 303:Src/main.c    **** 
 304:Src/main.c    **** /**
 305:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 306:Src/main.c    ****   * @retval None
 307:Src/main.c    ****   */
 308:Src/main.c    **** void Error_Handler(void)
 309:Src/main.c    **** {
 532              		.loc 1 309 1 view -0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536              		@ link register save eliminated.
 310:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 311:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 312:Src/main.c    **** 
 313:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 314:Src/main.c    **** }
 537              		.loc 1 314 1 view .LVU155
 538              		@ sp needed
 539 0000 7047     		bx	lr
 540              		.cfi_endproc
 541              	.LFE43:
ARM GAS  /tmp/cckSW9jU.s 			page 18


 543              		.comm	htim2,64,4
 544              		.comm	hspi1,100,4
 545              		.comm	hcrc,36,4
 546              		.text
 547              	.Letext0:
 548              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 549              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 550              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 551              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 552              		.file 6 "/usr/arm-none-eabi/include/sys/lock.h"
 553              		.file 7 "/usr/arm-none-eabi/include/sys/_types.h"
 554              		.file 8 "/usr/lib/gcc/arm-none-eabi/9.2.0/include/stddef.h"
 555              		.file 9 "/usr/arm-none-eabi/include/sys/reent.h"
 556              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 557              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 558              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc_ex.h"
 559              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 560              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 561              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_crc.h"
 562              		.file 16 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_spi.h"
 563              		.file 17 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 564              		.file 18 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim_ex.h"
 565              		.file 19 "/usr/arm-none-eabi/include/stdlib.h"
 566              		.file 20 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 567              		.file 21 "Inc/usb_device.h"
 568              		.file 22 "<built-in>"
ARM GAS  /tmp/cckSW9jU.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cckSW9jU.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cckSW9jU.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cckSW9jU.s:115    .text.MX_GPIO_Init:0000000000000058 $d
     /tmp/cckSW9jU.s:121    .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/cckSW9jU.s:127    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/cckSW9jU.s:201    .text.MX_SPI1_Init:000000000000003c $d
                            *COM*:0000000000000064 hspi1
     /tmp/cckSW9jU.s:207    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/cckSW9jU.s:213    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/cckSW9jU.s:299    .text.MX_TIM2_Init:0000000000000050 $d
                            *COM*:0000000000000040 htim2
     /tmp/cckSW9jU.s:304    .text.MX_CRC_Init:0000000000000000 $t
     /tmp/cckSW9jU.s:310    .text.MX_CRC_Init:0000000000000000 MX_CRC_Init
     /tmp/cckSW9jU.s:353    .text.MX_CRC_Init:000000000000001c $d
                            *COM*:0000000000000024 hcrc
     /tmp/cckSW9jU.s:359    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cckSW9jU.s:366    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cckSW9jU.s:474    .text.main:0000000000000000 $t
     /tmp/cckSW9jU.s:481    .text.main:0000000000000000 main
     /tmp/cckSW9jU.s:523    .text.Error_Handler:0000000000000000 $t
     /tmp/cckSW9jU.s:530    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
memset
HAL_GPIO_Init
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_CRC_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_USB_DEVICE_Init
